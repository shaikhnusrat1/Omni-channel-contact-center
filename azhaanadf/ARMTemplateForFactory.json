{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azhaanadf"
		},
		"AzureDatabricksOmniChannelWorkspace_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksOmniChannelWorkspace'"
		},
		"AzureSynapseAnalytics_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSynapseAnalytics'"
		},
		"ls_adlssink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adlssink'"
		},
		"ls_blobsource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blobsource'"
		},
		"ls_sink_chat_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_sink_chat'"
		},
		"ls_sink_crm_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_sink_crm'"
		},
		"ls_voice_sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_voice_sink'"
		},
		"AzureDataLakeStorageGold_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azhaanadlsgen2.dfs.core.windows.net/"
		},
		"AzureDatabricksOmniChannelWorkspace_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0917-221023-kmlw94pg"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://azhaankeyvault.vault.azure.net/"
		},
		"AzureSynapseAnalytics_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azhaan-synapse.sql.azuresynapse.net"
		},
		"AzureSynapseAnalytics_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldedicatedpool"
		},
		"AzureSynapseAnalytics_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminnusrat"
		},
		"ls_adlssink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azhaanadlsgen2.dfs.core.windows.net/"
		},
		"ls_azuresql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azhaanserver.database.windows.net"
		},
		"ls_azuresql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "azhaan_db"
		},
		"ls_azuresql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminnusrat"
		},
		"ls_sink_chat_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azhaanadlsgen2.dfs.core.windows.net/"
		},
		"ls_sink_crm_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azhaanadlsgen2.dfs.core.windows.net/"
		},
		"ls_voice_sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azhaanadlsgen2.dfs.core.windows.net/"
		},
		"ls_voicelogs_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.kaggle.com/api/v1"
		},
		"ls_voicelogs_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "nusratamena"
		},
		"blob_trigger_omni_data_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/d216a728-fa3c-4c26-af68-c8c6bea31bec/resourceGroups/azhaan_rg/providers/Microsoft.Storage/storageAccounts/azhaanblob"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blobfilelist",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "getwatermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@SELECT LastWatermark FROM dbo.Watermark WHERE SourceName = item().name;",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_sqlsource",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "getwatermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_blobsource",
											"type": "DatasetReference",
											"parameters": {
												"name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greaterOrEquals(activity('Get Metadata2').output.lastModified, activity('getwatermark').output.value)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_blobsource",
														"type": "DatasetReference",
														"parameters": {
															"name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_sink",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Stored procedure1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_GetWatermark]",
													"storedProcedureParameters": {
														"SourceName": {
															"value": {
																"value": "@item().name",
																"type": "Expression"
															},
															"type": "String"
														},
														"NewLM": {
															"value": {
																"value": "@activity('Get Metadata2').output.lastModified",
																"type": "Expression"
															},
															"type": "Datetime"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_azuresql",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-19T22:19:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blobfilelist')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqlsource')]",
				"[concat(variables('factoryId'), '/datasets/ds_blobsource')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_chatlogs_staging_to_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StagingToBronzeChatLogs",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "staging",
									"wildcardFileName": {
										"value": "@concat('*', pipeline().parameters.FileKeyword, '*.csv')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"firstRowAsHeader": true
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv",
									"firstRowAsHeader": true
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_blobsource",
								"type": "DatasetReference",
								"parameters": {
									"name": "chat"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_chat",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Chat File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "StagingToBronzeChatLogs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blobsource",
								"type": "DatasetReference",
								"parameters": {
									"name": "chat"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ls_blobsource",
									"type": "LinkedServiceReference"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@concat('*', pipeline().parameters.FileKeyword, '*.csv')",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileKeyword": {
						"type": "string",
						"defaultValue": "chat"
					}
				},
				"folder": {
					"name": "StagingToBronze"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-26T14:45:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blobsource')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_chat')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_blobsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_crm_staging_to_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StagingToBronzeCrmLogs",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "staging",
									"wildcardFileName": {
										"value": "@concat('*', pipeline().parameters.FileKeyword, '*.csv')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"firstRowAsHeader": true
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv",
									"firstRowAsHeader": true
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_blobsource",
								"type": "DatasetReference",
								"parameters": {
									"name": "crm"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_crm",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete CRM File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "StagingToBronzeCrmLogs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blobsource",
								"type": "DatasetReference",
								"parameters": {
									"name": "crm"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ls_blobsource",
									"type": "LinkedServiceReference"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@concat('*', pipeline().parameters.FileKeyword, '*.csv')",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileKeyword": {
						"type": "string",
						"defaultValue": "crm"
					}
				},
				"folder": {
					"name": "StagingToBronze"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-26T14:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blobsource')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_crm')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_blobsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_omni')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_chat_omni",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_crm_omni",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_chatlogs_staging_to_bronze",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_voice_omni",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_voicelogs_staging_to_bronze",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_crm_omni",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_voice_omni",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_crm_staging_to_bronze",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BronzeToSilver",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "pl_chat_omni",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Project: Omni-Channel Contact Center Analytics & SLA Risk Scoring/BronzeToSilverAutoloader"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksOmniChannelWorkspace",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SilverToGold",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "BronzeToSilver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Project: Omni-Channel Contact Center Analytics & SLA Risk Scoring/SilverToGoldAutoloader"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksOmniChannelWorkspace",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GoldToSynapseChannelDim",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SilverToGold",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "gold/dim_channel",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "IF OBJECT_ID('dbo.omni_gold_dim_channel', 'U') IS NOT NULL\n    DELETE FROM dbo.omni_gold_dim_channel;\n",
								"writeBehavior": "Upsert",
								"upsertSettings": {
									"keys": [
										"channel_id"
									],
									"interimSchemaName": ""
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_channel_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GoldToSynapseCustomerDim",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SilverToGold",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "gold/dim_customer",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "IF OBJECT_ID('dbo.omni_gold_dim_customer', 'U') IS NOT NULL\n    DELETE FROM dbo.omni_gold_dim_customer;",
								"writeBehavior": "Upsert",
								"upsertSettings": {
									"keys": [
										"account_id"
									],
									"interimSchemaName": ""
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CustomerDimParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTableCustomerDim",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GoldToSynapseInteractionFact",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SilverToGold",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "gold/fact_interactions/event*",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "IF OBJECT_ID('dbo.omni_gold_fact_interactions', 'U') IS NOT NULL\n    DELETE FROM\ndbo.omni_gold_fact_interactions;",
								"writeBehavior": "Upsert",
								"upsertSettings": {
									"keys": [
										"interaction_id",
										"customer_id"
									],
									"interimSchemaName": ""
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InteractionFactParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTableInteractionsFact",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-30T18:58:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_chatlogs_staging_to_bronze')]",
				"[concat(variables('factoryId'), '/pipelines/pl_voicelogs_staging_to_bronze')]",
				"[concat(variables('factoryId'), '/pipelines/pl_crm_staging_to_bronze')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksOmniChannelWorkspace')]",
				"[concat(variables('factoryId'), '/datasets/dim_channel_parquet')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]",
				"[concat(variables('factoryId'), '/datasets/CustomerDimParquet')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTableCustomerDim')]",
				"[concat(variables('factoryId'), '/datasets/InteractionFactParquet')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTableInteractionsFact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_voicelogs_staging_to_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StagingToBronzeVoiceLogs",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "staging",
									"wildcardFileName": {
										"value": "@concat('*', pipeline().parameters.FileKeyword, '*.csv')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"firstRowAsHeader": true
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv",
									"firstRowAsHeader": true
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_blobsource",
								"type": "DatasetReference",
								"parameters": {
									"name": "voice"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_voice",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Voice Data",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "StagingToBronzeVoiceLogs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blobsource",
								"type": "DatasetReference",
								"parameters": {
									"name": "voice"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ls_blobsource",
									"type": "LinkedServiceReference"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@concat('*', pipeline().parameters.FileKeyword, '*.csv')",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileKeyword": {
						"type": "string",
						"defaultValue": "voice"
					}
				},
				"folder": {
					"name": "StagingToBronze"
				},
				"annotations": [],
				"lastPublishTime": "2025-09-26T14:54:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blobsource')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_voice')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_blobsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "channel_id",
						"type": "nvarchar"
					},
					{
						"name": "channel_name",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "omni_gold_dim_channel"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTableCustomerDim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "omni_gold_dim_customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTableInteractionsFact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "omni_gold_fact_interactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerDimParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGold",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "gold/dim_customer",
						"fileSystem": "container11"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "account_id",
						"type": "UTF8"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					},
					{
						"name": "tier",
						"type": "UTF8"
					},
					{
						"name": "start_ts",
						"type": "INT96"
					},
					{
						"name": "end_ts",
						"type": "INT96"
					},
					{
						"name": "is_current",
						"type": "BOOLEAN"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InteractionFactParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGold",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "gold/fact_interactions",
						"fileSystem": "container11"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "interaction_id",
						"type": "UTF8"
					},
					{
						"name": "customer_id",
						"type": "UTF8"
					},
					{
						"name": "agent_id",
						"type": "UTF8"
					},
					{
						"name": "channel_id",
						"type": "UTF8"
					},
					{
						"name": "event_ts",
						"type": "INT96"
					},
					{
						"name": "duration",
						"type": "INT_32"
					},
					{
						"name": "event_date",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dim_channel_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGold",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "gold/dim_channel",
						"fileSystem": "container11"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "channel_id",
						"type": "UTF8"
					},
					{
						"name": "channel_name",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blobfilelist')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobsource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "staging",
						"container": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blobsource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobsource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('*', pipeline().parameters.FileKeyword, '*.csv')",
							"type": "Expression"
						},
						"folderPath": "staging",
						"container": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "tweet_id",
						"type": "String"
					},
					{
						"name": "author_id",
						"type": "String"
					},
					{
						"name": "inbound",
						"type": "String"
					},
					{
						"name": "created_at",
						"type": "String"
					},
					{
						"name": "text",
						"type": "String"
					},
					{
						"name": "response_tweet_id",
						"type": "String"
					},
					{
						"name": "in_response_to_tweet_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adlssink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze",
						"fileSystem": "container11"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adlssink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_chat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sink_chat",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('chatlogs_', formatDateTime(utcnow(), 'yyyyMMddHHmmss'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "bronze/chat",
						"fileSystem": "container11"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sink_chat')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_crm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sink_crm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('crmdata_', formatDateTime(utcnow(), 'yyyyMMddHHmmss'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "bronze/crm",
						"fileSystem": "container11"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sink_crm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_voice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_voice_sink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('voicelogs_', formatDateTime(utcnow(), 'yyyyMMddHHmmss'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "bronze/voice",
						"fileSystem": "container11"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_voice_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlsource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azuresql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SourceName",
						"type": "varchar"
					},
					{
						"name": "LastWatermark",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Watermark"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageGold')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageGold_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksOmniChannelWorkspace')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-662039597369628.8.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksOmniChannelWorkspace_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricksOmniChannelWorkspace_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('AzureSynapseAnalytics_properties_typeProperties_server')]",
					"database": "[parameters('AzureSynapseAnalytics_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSynapseAnalytics_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSynapseAnalytics_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adlssink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adlssink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adlssink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azuresql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_azuresql_properties_typeProperties_server')]",
					"database": "[parameters('ls_azuresql_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_azuresql_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "azuredbpassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blobsource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blobsource_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sink_chat')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_sink_chat_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_sink_chat_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sink_crm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_sink_crm_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_sink_crm_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_voice_sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_voice_sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_voice_sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_voicelogs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_voicelogs_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('ls_voicelogs_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "apikey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_trigger_omni_data')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_omni",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/mycontainer/blobs/staging/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('blob_trigger_omni_data_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_omni')]"
			]
		}
	]
}